<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goods">

   <select id="selectList" parameterType="hashmap"
      resultType="hashmap">
      
      <include refid="common.pagingPre" /> 
      <![CDATA[
         SELECT
        GOODS_NO,
        NAME,
        CONTENT, 
        READCNT,
        REGDATE,
        PRICE,
        RELATED,
        KEYWORD,
        CATEGORY,
        ATTRIBUTE_NO,
        GOODS_SIZE,
        COLOR,
        COUNT,
        RNUM,
        WM_CONCAT(SAV_NAME) AS IMAGE
FROM
(
select 
           c.GOODS_NO,
            c.NAME,
            c.CONTENT, 
            c.READCNT,
            c.REGDATE,
            c.PRICE,
            c.RELATED,
            c.KEYWORD,
            c.CATEGORY,
            c.ATTRIBUTE_NO,
            c.GOODS_SIZE,
            c.COLOR,
            c.COUNT,
            c.RNUM,
         d.SAV_NAME
FROM


(SELECT
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            ATTRIBUTE_NO,
            WM_CONCAT(GOODS_SIZE) AS GOODS_SIZE,
            WM_CONCAT(COLOR) AS COLOR,
            WM_CONCAT(COUNT) AS COUNT,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         FROM
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT
            FROM
               GOODS a INNER JOIN GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
             
            
            )
              GROUP BY
               GOODS_NO,
               NAME,CONTENT, 
               READCNT,
               REGDATE,
               PRICE,
               RELATED,
               KEYWORD,
               ATTRIBUTE_NO,
               CATEGORY
            
            ) c INNER JOIN UPLOAD d
            ON 
            c.GOODS_NO=d.GOODS_NO
            )
            GROUP BY
               GOODS_NO,
        NAME,
        CONTENT, 
        READCNT,
        REGDATE,
        PRICE,
        RELATED,
        KEYWORD,
        CATEGORY,
        ATTRIBUTE_NO,
        GOODS_SIZE,
        COLOR,
        COUNT,
        RNUM
      ]]>
      <include refid="common.pagingPost" />

   </select>
   
   <select id="selectListcate" parameterType="hashmap"
      resultType="hashmap">
      
      <include refid="common.pagingPre" /> 
         SELECT
        GOODS_NO,
        NAME,
        CONTENT, 
        READCNT,
        REGDATE,
        PRICE,
        RELATED,
        KEYWORD,
        CATEGORY,
        ATTRIBUTE_NO,
        GOODS_SIZE,
        COLOR,
        COUNT,
        ROW_NUMBER() OVER (
        ORDER BY
        		<choose>
        		
	 			<when test='CATEGORY2 == "1"'>
					 NAME ASC
				 </when>
				 <when test='CATEGORY2 == "2"'>
					 PRICE ASC
				 </when>
				 <when test='CATEGORY2 == "3"'>
					 PRICE DESC
				 </when>
				 <when test='CATEGORY2 == "4"'>
					 READCNT DESC
				 </when>
				 <otherwise>
					 GOODS_NO DESC
				 </otherwise>
				 </choose>
        ) RNUM,
        WM_CONCAT(SAV_NAME) AS IMAGE
FROM
(
select 
           c.GOODS_NO,
            c.NAME,
            c.CONTENT, 
            c.READCNT,
            c.REGDATE,
            c.PRICE,
            c.RELATED,
            c.KEYWORD,
            c.CATEGORY,
            c.ATTRIBUTE_NO,
            c.GOODS_SIZE,
            c.COLOR,
            c.COUNT,
         d.SAV_NAME
FROM


(SELECT
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            ATTRIBUTE_NO,
            WM_CONCAT(GOODS_SIZE) AS GOODS_SIZE,
            WM_CONCAT(COLOR) AS COLOR,
            WM_CONCAT(COUNT) AS COUNT
         FROM
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT
            FROM
               GOODS a INNER JOIN GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
            )
              GROUP BY
               GOODS_NO,
               NAME,CONTENT, 
               READCNT,
               REGDATE,
               PRICE,
               RELATED,
               KEYWORD,
               ATTRIBUTE_NO,
               CATEGORY
            ) c INNER JOIN UPLOAD d
            ON 
            c.GOODS_NO=d.GOODS_NO
            )
            WHERE
            	<choose>
        		
		 			<when test='CATEGORY1 == "0"'>
						 COUNT = 0 AND
					 </when>
					 <when test='CATEGORY1 == "1"'>
						 COUNT > 0 AND
					 </when>
					 
					 <otherwise>
						
					 </otherwise>
				 </choose>
            	
            	
            	<choose>
        		
		 			<when test='CATEGORY == OUTER'>
						CATEGORY ='CATEGORY'
					 </when>
					 <when test='CATEGORY == SUIT'>
						CATEGORY ='SUIT'
					 </when>
					 <when test='CATEGORY == TOP'>
						CATEGORY ='TOP'
					 </when>
					 <when test='CATEGORY == SHIRT'>
						CATEGORY ='SHIRT'
					 </when>
					 <when test='CATEGORY == KNIT'>
						CATEGORY ='KNIT'
					 </when>
					 <when test='CATEGORY == BOTTOM'>
						CATEGORY ='BOTTOM'
					 </when>
					 <when test='CATEGORY == SHOES'>
						CATEGORY ='SHOES'
					 </when>
					 <when test='CATEGORY == BOTTOM'>
						CATEGORY ='BOTTOM'
					 </when>
					 <when test='CATEGORY == SHOES'>
						CATEGORY ='SHOES'
					 </when>
					 <when test='CATEGORY == ACC'>
						CATEGORY ='ACC'
					 </when>
					 
					 
					 
					 
					 
					 <otherwise>
						
					 </otherwise>
				 </choose>
            	CATEGORY LIKE '%'||#{CATEGORY}||'%'
            GROUP BY
               GOODS_NO,
        		NAME,
       	 		CONTENT, 
       			READCNT,
       			REGDATE,
        		PRICE,
        		RELATED,
        		KEYWORD,
        		CATEGORY,
        		ATTRIBUTE_NO,
        		GOODS_SIZE,
        		COLOR,
        		COUNT
			
      <include refid="common.pagingPost" />
      

   </select>
   
   
   <select id="selectGoodsList" parameterType="hashmap" resultType="hashmap">
      <![CDATA[
         select 
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            WM_CONCAT(DISTINCT GOODS_SIZE) GOODS_SIZE,
            WM_CONCAT(DISTINCT COLOR) GOODS_COLOR,
            WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         from
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT,
               c.SAV_NAME
            FROM
               GOODS a 
               INNER JOIN 
               GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
               
            INNER JOIN 
            UPLOAD c
            ON 
               a.GOODS_NO = c.GOODS_NO  
               
      ORDER BY 
         a.GOODS_NO DESC 
      )
      GROUP BY
         GOODS_NO,
         NAME,
         CONTENT, 
         READCNT,
         REGDATE,
         PRICE,
         RELATED,
         KEYWORD,
         CATEGORY 
         
      ]]>
</select>

<select id="selectGoodsNewList" parameterType="hashmap" resultType="hashmap">
      <![CDATA[
      select 
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            WM_CONCAT(DISTINCT GOODS_SIZE) GOODS_SIZE,
            WM_CONCAT(DISTINCT COLOR) GOODS_COLOR,
            WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         from
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT,
               c.SAV_NAME
            FROM
               GOODS a 
               INNER JOIN 
               GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
               
            INNER JOIN 
            UPLOAD c
            ON 
               a.GOODS_NO = c.GOODS_NO  
               
      ORDER BY 
         a.GOODS_NO DESC 
      )
      GROUP BY
         GOODS_NO,
         NAME,
         CONTENT, 
         READCNT,
         REGDATE,
         PRICE,
         RELATED,
         KEYWORD,
         CATEGORY 
      ORDER BY
         REGDATE DESC
]]>
</select>

<select id="selectGoodsBestList" parameterType="hashmap" resultType="hashmap">
      <![CDATA[
      select 
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            WM_CONCAT(DISTINCT GOODS_SIZE) GOODS_SIZE,
            WM_CONCAT(DISTINCT COLOR) GOODS_COLOR,
            WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         from
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT,
               c.SAV_NAME
            FROM
               GOODS a 
               INNER JOIN 
               GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
               
            INNER JOIN 
            UPLOAD c
            ON 
               a.GOODS_NO = c.GOODS_NO  
               
      ORDER BY 
         a.GOODS_NO DESC 
      )
      GROUP BY
         GOODS_NO,
         NAME,
         CONTENT, 
         READCNT,
         REGDATE,
         PRICE,
         RELATED,
         KEYWORD,
         CATEGORY 
      ORDER BY
        READCNT DESC
]]>
</select>

<select id="selectGoodsCategory" resultType="hashmap" parameterType="hashmap">
<include refid="common.pagingPre"/>
<![CDATA[
select 
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            WM_CONCAT(DISTINCT GOODS_SIZE) GOODS_SIZE,
            WM_CONCAT(DISTINCT COLOR) GOODS_COLOR,
            WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         from
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT,
                c.SAV_NAME
            FROM
               GOODS a 
               INNER JOIN 
               GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
               
            INNER JOIN 
            UPLOAD c
            ON 
               a.GOODS_NO = c.GOODS_NO  
               
      ORDER BY 
         a.GOODS_NO DESC 
      )
      WHERE
         CATEGORY = #{CATEGORY}
      GROUP BY
         GOODS_NO,
         NAME,
         CONTENT, 
         READCNT,
         REGDATE,
         PRICE,
         RELATED,
         KEYWORD,
         CATEGORY 
]]>
<include refid="common.pagingPost"/>
</select>




<select id="selectGoodsBestCategory" resultType="hashmap" parameterType="hashmap">
<![CDATA[
select 
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            WM_CONCAT(DISTINCT GOODS_SIZE) GOODS_SIZE,
            WM_CONCAT(DISTINCT COLOR) GOODS_COLOR,
            WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         from
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT,
                c.SAV_NAME
            FROM
               GOODS a 
               INNER JOIN 
               GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
               
            INNER JOIN 
            UPLOAD c
            ON 
               a.GOODS_NO = c.GOODS_NO  
               
      ORDER BY 
         a.GOODS_NO DESC 
      )
      WHERE
         CATEGORY = #{CATEGORY}
      GROUP BY
         GOODS_NO,
         NAME,
         CONTENT, 
         READCNT,
         REGDATE,
         PRICE,
         RELATED,
         KEYWORD,
         CATEGORY 
      ORDER BY
         READCNT DESC
]]>
</select>

<select id="selectGoodsRelatedList" parameterType="java.util.Map" resultType="java.util.Map">

      <![CDATA[
         SELECT
               GOODS_NO,
               NAME,
               PRICE,
               WM_CONCAT(SAV_NAME) IMAGE
         FROM
               (SELECT
                  a.GOODS_NO,
                  a.NAME,
                  a.PRICE,   
                  b.SAV_NAME
               FROM
                  GOODS a INNER JOIN UPLOAD b
               ON
                  a.GOODS_NO = b.GOODS_NO
               )
         WHERE
               GOODS_NO
         IN      
         ]]>
                  <foreach collection="relGoodsNo_List" item="item" index="index" separator="," open="(" close=")" >
                     #{item}
                  </foreach>
                     
         GROUP BY
               GOODS_NO,
               NAME,
               PRICE
</select> 

<update id="updateHitcnt" parameterType="hashmap">
<![CDATA[
   UPDATE
      GOODS
   SET
      READCNT = READCNT + 1
   WHERE 
      GOODS_NO = #{GOODS_NO}
]]>
</update>

<update id="updateGoodsCnt" parameterType="hashmap">
<![CDATA[
   UPDATE
      GOODS_ATTRIBUTE
   SET
      COUNT = COUNT - 1
   WHERE 
      ATTRIBUTE_NO = #{ATTRIBUTE_NO}
]]>
</update>


<select id="selectGoodsDetail" resultType="hashmap" parameterType="hashmap">
<![CDATA[
SELECT
   GOODS_NO,
   NAME,
   CONTENT, 
   READCNT,
   REGDATE,
   PRICE,
   RELATED,
   KEYWORD,
    CATEGORY,
    ATTRIBUTE_NO,
   WM_CONCAT(GOODS_SIZE) AS GOODS_SIZE,
   WM_CONCAT(COLOR) AS COLOR,
   WM_CONCAT(COUNT) AS COUNT
FROM
   (
   SELECT 
      a.GOODS_NO,
      a.NAME,
      a.CONTENT,
      a.READCNT,
      a.REGDATE,
      a.PRICE,
      a.RELATED,
      a.KEYWORD,
      a.CATEGORY,
      b.ATTRIBUTE_NO,
      b.GOODS_SIZE,
      b.COLOR,
      b.COUNT
   FROM
      GOODS a INNER JOIN GOODS_ATTRIBUTE b 
   ON 
      a.GOODS_NO = b.GOODS_NO 
    
   ORDER BY 
      b.ATTRIBUTE_NO ASC
   )
  WHERE
        GOODS_NO = #{GOODS_NO}
  GROUP BY
      GOODS_NO,
      NAME,CONTENT, 
      READCNT,
      REGDATE,
      PRICE,
      RELATED,
      KEYWORD,
        ATTRIBUTE_NO,
      CATEGORY
]]>
</select>

<select id="selectGoodsImage" resultType="hashmap" parameterType="hashmap">
<![CDATA[
 SELECT 
    GOODS_NO,
    UPLOAD_NO,
    SAV_NAME,
    ORG_NAME 
 FROM 
    UPLOAD 
 WHERE 
    GOODS_NO = #{GOODS_NO}
 ORDER BY
    UPLOAD_NO ASC
]]>
</select>


   <insert id="insert" parameterType="hashmap"
      useGeneratedKeys="true" keyProperty="GOODS_NO">
      <selectKey keyProperty="GOODS_NO" resultType="java.lang.Integer"
         order="BEFORE">
         SELECT GOODS_NO_SEQ.NEXTVAL FROM DUAL
      </selectKey>
    <![CDATA[
         
        INSERT INTO GOODS
        (
            GOODS_NO,
            NAME,
            CONTENT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY
        )
        VALUES
        (
            #{GOODS_NO},
            #{NAME},
            #{CONTENT},
            SYSDATE,
            #{PRICE},
            #{RELATED},
            #{KEYWORD},
            #{CATEGORY}
        )
    ]]>
   </insert>
   
   <insert id="insertAttribute" parameterType="hashmap"
      useGeneratedKeys="true" keyProperty="ATTRIBUTE_NO">
      <selectKey keyProperty="ATTRIBUTE_NO" resultType="java.lang.Integer"
         order="BEFORE">
         SELECT ATTRIBUTE_NO_SEQ.NEXTVAL FROM DUAL
      </selectKey>
    <![CDATA[
        INSERT INTO GOODS_ATTRIBUTE
        (
            ATTRIBUTE_NO,
            GOODS_SIZE,
            COLOR,
            COUNT,
            GOODS_NO
        )
        VALUES
        (
            #{ATTRIBUTE_NO},
            #{GOODS_SIZE},
            #{COLOR},
            #{COUNT},
            #{GOODS_NO}
        )
    ]]>
   </insert>   
   

   <insert id="insertUpload" parameterType="hashmap"
      useGeneratedKeys="true" keyProperty="UPLOAD_NO">
      <selectKey keyProperty="UPLOAD_NO" resultType="java.lang.Integer"
         order="BEFORE">
         SELECT UPLOAD_NO_SEQ.NEXTVAL FROM DUAL
      </selectKey>
       <![CDATA[
        INSERT INTO UPLOAD
        (
            UPLOAD_NO,
            ORG_NAME,
            SAV_NAME,
            FILE_SIZE,
            DEL,
            GOODS_NO
        )
        VALUES
        (
              #{UPLOAD_NO},
            #{ORG_NAME},
            #{SAV_NAME},
            #{FILE_SIZE},
            'N',
            #{GOODS_NO}
        )
       ]]>
   </insert>
   
   <update id="updateGoods" parameterType="hashmap">
      <![CDATA[
         UPDATE 
            GOODS 
         SET 
            NAME = #{NAME},
            CONTENT = #{CONTENT},
            PRICE = #{PRICE},
            RELATED = #{RELATED},
            KEYWORD = #{KEYWORD},
            CATEGORY = #{CATEGORY}
         WHERE 
            GOODS_NO = #{GOODS_NO}
      ]]>
   </update>

   <!-- 상품 종류 수정 -->
   <update id="updateGoodsAttribute" parameterType="hashmap">
      <![CDATA[
         UPDATE 
            GOODS_ATTRIBUTE
         SET 
            GOODS_SIZE = #{GOODS_SIZE},
            COLOR = #{COLOR},
            COUNT = #{COUNT}
         WHERE 
            GOODS_NO = #{GOODS_NO }
      ]]>
   </update>

   <!-- 상품 이미지 수정 -->
   <update id="updateGoodsImage" parameterType="hashmap">
      <![CDATA[
         UPDATE 
            UPLOAD 
         SET 
            ORG_NAME = #{ORG_NAME},
            SAV_NAME = #{SAV_NAME},
            FILE_SIZE = #{FILE_SIZE},
            DEL = 'N'
         WHERE 
            GOODS_NO = #{GOODS_NO}
      ]]>
   </update>
   
   <!-- 속성 개별 삭제 -->
   <update id="deleteAttribute" parameterType="hashmap">
      <![CDATA[
         DELETE
         FROM
            GOODS_ATTRIBUTE
         WHERE
            ATTRIBUTE_NO = #{ATTRIBUTE_NO}
      ]]>
   </update>
   
   <!-- 사진 개별 삭제 -->
   <update id="deleteUpload" parameterType="hashmap">
      <![CDATA[
         DELETE
         FROM
            UPLOAD
         WHERE
            UPLOAD_NO = #{UPLOAD_NO}
      ]]>
   </update>
   
   <!--↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 상품 삭제 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
   
   <delete id="deleteGoods" parameterType="hashmap">
    <![CDATA[
        delete
        FROM
            GOODS
        WHERE
            GOODS_NO = #{GOODS_NO}   
    ]]>
   </delete>
   
   <delete id="deleteA" parameterType="hashmap">
    <![CDATA[
        delete
        FROM
            GOODS_ATTRIBUTE
        WHERE
            GOODS_NO = #{GOODS_NO}   
    ]]>
   </delete>
   
   <delete id="deleteU" parameterType="hashmap">
    <![CDATA[
        delete
        FROM
            UPLOAD
        WHERE
            GOODS_NO = #{GOODS_NO}   
    ]]>
   </delete>

   
   
  <!-- RIVIEW 상세보기 리스트-->
   <select id="selectGoodsReviewList" resultType="hashmap" parameterType="hashmap">
  
      select 
            	REVIEW_NO,
            	TITLE,
            	MEMBER_ID,
            	CONTENT,
            	REGDATE,
            	READCNT,
            	GOODS_NO,
            	WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            	ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) RNUM
	 FROM           
			(SELECT
			     a.REVIEW_NO,
			     a.TITLE,
			     a.MEMBER_ID,
			     a.CONTENT,
			     a.REGDATE,
			     a.READCNT,
			     a.GOODS_NO,
			     b.SAV_NAME
			FROM
			     UPLOAD b INNER JOIN 
			     REVIEW a
			ON
			     a.GOODS_NO=b.GOODS_NO  
			WHERE 
			     a.GOODS_NO = ${GOODS_NO} 
			          
			         
			ORDER BY 
			     REVIEW_NO
			          
			)
	 GROUP BY
	        	REVIEW_NO,
	            TITLE,
	            MEMBER_ID,
	            CONTENT,
	            REGDATE,
	            READCNT,
	            GOODS_NO
   </select>
<!-- QA 상세보기 리스트-->
   <select id="selectQaViewList" resultType="hashmap" parameterType="hashmap">
   
         select 
            	QA_NO,
            	CATEGORY,
            	TITLE,
            	PASSWD,
            	MEMBER_ID,
            	CONTENT,
            	STATUS,
            	REGDATE,
            	GOODS_NO,
            	WM_CONCAT(DISTINCT SAV_NAME) IMAGE,
            	ROW_NUMBER() OVER (ORDER BY QA_NO DESC) RNUM
		 FROM           
		(SELECT
		    	a.QA_NO,
		    	a.CATEGORY,
		    	a.TITLE,
		    	a.PASSWD,
		    	a.MEMBER_ID,
		    	a.CONTENT,
		    	a.STATUS,
		    	a.REGDATE,
		    	a.GOODS_NO,
		    	b.SAV_NAME
		FROM
		    	UPLOAD b INNER JOIN 
		    	QA a
		ON
		    	a.GOODS_NO=b.GOODS_NO  
		WHERE 
		    	a.GOODS_NO = ${GOODS_NO} 
		          
		         
		ORDER BY 
		    	QA_NO
          
		)
		 GROUP BY
		    	QA_NO,
		    	CATEGORY,
		    	TITLE,
		    	PASSWD,
		    	MEMBER_ID,
		    	CONTENT,
		    	STATUS,
		    	REGDATE,
		    	GOODS_NO
   </select>








<select id="goodsSearchList" parameterType="hashMap" resultType="hashMap">
<include refid="common.pagingPre" /> 
		select 
			GOODS_NO, 
			NAME,
      		CONTENT,
			READCNT,
			REGDATE,
     		PRICE,
      		RELATED,
			KEYWORD,
			CATEGORY,
     		WM_CONCAT(SAV_NAME) IMAGE,
     		COUNT(NAME) OVER() AS CNT,
     		ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
		FROM
			(
		SELECT
          	a.GOODS_NO,
          	a.NAME,
          	a.CONTENT,
          	a.READCNT,
        	a.REGDATE,
          	a.PRICE,
          	a.RELATED,
        	a.KEYWORD,
        	a.CATEGORY,
          	b.SAV_NAME
        FROM
      		GOODS a INNER JOIN UPLOAD b
        	ON a.GOODS_NO = b.GOODS_NO
        WHERE
        	<if test='PRICE1 != "" and PRICE2 != ""'>
        	PRICE BETWEEN #{PRICE1}  AND #{PRICE2}  AND
        	</if>
        	CATEGORY LIKE '%'||#{CATEGORY}||'%' 
        )
			WHERE NAME LIKE '%'||#{keyword}||'%' 
			OR KEYWORD LIKE '%'||#{keyword}||'%' 
      GROUP BY
        GOODS_NO, 
      	NAME,
        CONTENT,
      	READCNT,
      	REGDATE,
        PRICE,
        RELATED,
      	KEYWORD,
      	CATEGORY
	 ORDER BY
	 <choose>
	 	<when test='order_by == "NAMELIST"'>
			 NAME ASC
		 </when>
		 <when test='order_by == "ROWPRICE"'>
			 PRICE ASC
		 </when>
		 <when test='order_by == "HIGHPRICE"'>
			 PRICE DESC
		 </when>
		 <otherwise>
			 GOODS_NO DESC
		 </otherwise>
	 </choose>
	 
		<include refid="common.pagingPost" />
</select>

<select id="goodsAdminSearchList" parameterType="hashmap"
      resultType="hashmap">
      
      <include refid="common.pagingPre" /> 
      
         SELECT
        GOODS_NO,
        NAME,
        CONTENT, 
        READCNT,
        REGDATE,
        PRICE,
        RELATED,
        KEYWORD,
        CATEGORY,
        ATTRIBUTE_NO,
        GOODS_SIZE,
        COLOR,
        COUNT,
        RNUM,
        WM_CONCAT(SAV_NAME) AS IMAGE
FROM
(
select 
           c.GOODS_NO,
            c.NAME,
            c.CONTENT, 
            c.READCNT,
            c.REGDATE,
            c.PRICE,
            c.RELATED,
            c.KEYWORD,
            c.CATEGORY,
            c.ATTRIBUTE_NO,
            c.GOODS_SIZE,
            c.COLOR,
            c.COUNT,
            c.RNUM,
         d.SAV_NAME
FROM


(SELECT
            GOODS_NO,
            NAME,
            CONTENT, 
            READCNT,
            REGDATE,
            PRICE,
            RELATED,
            KEYWORD,
            CATEGORY,
            ATTRIBUTE_NO,
            WM_CONCAT(GOODS_SIZE) AS GOODS_SIZE,
            WM_CONCAT(COLOR) AS COLOR,
            WM_CONCAT(COUNT) AS COUNT,
            ROW_NUMBER() OVER (ORDER BY GOODS_NO DESC) RNUM
         FROM
            (
            SELECT 
               a.GOODS_NO,
               a.NAME,
               a.CONTENT,
               a.READCNT,
               a.REGDATE,
               a.PRICE,
               a.RELATED,
               a.KEYWORD,
               a.CATEGORY,
               b.ATTRIBUTE_NO,
               b.GOODS_SIZE,
               b.COLOR,
               b.COUNT
            FROM
               GOODS a INNER JOIN GOODS_ATTRIBUTE b 
            ON 
               a.GOODS_NO = b.GOODS_NO 
                
                 WHERE 
                 
			<if test='SearchNum.equals("NAME")'> 	
			(NAME LIKE '%' || #{SearchKeyword} || '%')	
			</if>
			
			<if test='SearchNum.equals("PRICE")'> 	
			(PRICE LIKE '%' || #{SearchKeyword} || '%')	
			</if>
			<if test='SearchNum.equals("COLOR")'> 	
			(COLOR LIKE '%' || #{SearchKeyword} || '%')	
			</if>
			<if test='SearchNum.equals("GOODS_SIZE")'> 	
			(GOODS_SIZE LIKE '%' || #{SearchKeyword} || '%')	
			</if>
			<if test='SearchNum.equals("COUNT")'> 	
			(COUNT LIKE '%' || #{SearchKeyword} || '%')	
			</if>
            
            )
              GROUP BY
               GOODS_NO,
               NAME,CONTENT, 
               READCNT,
               REGDATE,
               PRICE,
               RELATED,
               KEYWORD,
               ATTRIBUTE_NO,
               CATEGORY
            
            ) c INNER JOIN UPLOAD d
            ON 
            c.GOODS_NO=d.GOODS_NO
            )
            GROUP BY
               GOODS_NO,
        NAME,
        CONTENT, 
        READCNT,
        REGDATE,
        PRICE,
        RELATED,
        KEYWORD,
        CATEGORY,
        ATTRIBUTE_NO,
        GOODS_SIZE,
        COLOR,
        COUNT,
        RNUM
      
      <include refid="common.pagingPost" />

   </select>


</mapper>