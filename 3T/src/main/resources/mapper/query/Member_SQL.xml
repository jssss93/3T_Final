<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">


	<select id="checkMember" parameterType="hashmap"
		resultType="java.lang.Integer">
	<![CDATA[
		select 
			count(email) 
		from 
			member
		where 
			email = #{EMAIL}
	]]>
	</select>
	
	<!-- 회원정보(로그인, 회원정보수정) -->
	<select id="memberInfoList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
		SELECT 
			MEMBER_NO,
			MEMBER_ID, 
			PASSWD, 
			NAME, 
			BIRTH, 
			ZIPCODE, 
			ADDR1, 
			ADDR2, 
			PHONE, 
			EMAIL 
		FROM 
			MEMBER 
		WHERE 
			MEMBER_ID = #{MEMBER_ID}
	]]>
	</select>
	
		<update id="keepLogin">
    	UPDATE 
    		MEMBER 
    	SET
    		SESSIONKEY = #{SESSIONKEY}, 
    		SESSIONLIMIT = #{SESSIONLIMIT} 
    	WHERE 
    		MEMBER_ID = #{MEMBER_ID}
    </update>
    
    <select id="checkUserWithSessionKey" parameterType="String" resultType="hashmap">
        SELECT
        	MEMBER_NO,
			MEMBER_ID, 
			PASSWD, 
			NAME, 
			BIRTH, 
			ZIPCODE, 
			ADDR1, 
			ADDR2, 
			PHONE, 
			EMAIL,
			SESSIONKEY
        FROM 
        	MEMBER 
        WHERE 
        	SESSIONKEY = #{SESSIONKEY} AND 
        	SESSIONLIMIT > SYSDATE
    </select>
	
	<select id="findId" parameterType="hashmap" resultType="String">
		<![CDATA[
		SELECT 
			MEMBER_ID
		FROM 
			MEMBER 
		WHERE 
			EMAIL = #{EMAIL} AND
			NAME = #{NAME}
	]]>
	</select>
	
	<select id="findPasswd" parameterType="hashmap" resultType="String">
		<![CDATA[
		SELECT 
			PASSWD
		FROM 
			MEMBER 
		WHERE 
			MEMBER_ID = #{MEMBER_ID} AND
			BIRTH = #{BIRTH} AND
			NAME = #{NAME}
	]]>
	</select>
	

	<select id="memberInfo" parameterType="String" resultType="hashmap">
			<![CDATA[
		SELECT 
			MEMBER_NO,
			MEMBER_ID, 
			PASSWD, 
			NAME, 
			BIRTH, 
			ZIPCODE, 
			ADDR1, 
			ADDR2, 
			PHONE, 
			EMAIL, 
			REGDATE,
			GRADE,
			POINT
		FROM 
			MEMBER 
		WHERE 
			MEMBER_ID = #{MEMBER_ID}
	]]>
	</select>

	<!-- mypage-myboard -> Qna -->
	<select id="myBoardQna" parameterType="hashmap"
		resultType="hashmap">
        <![CDATA[
           SELECT
           		QA_NO,
           		TITLE,
           		MEMBER_ID,
           		REGDATE
           	FROM 
           		QA
           	WHERE
           		MEMBER_ID = #{MEMBER_ID}	
        ]]>
	</select>
	
	<!-- mypage-myboard -> Review -->
	<select id="myBoardReview" parameterType="hashmap"
		resultType="hashmap">
        <![CDATA[
           SELECT
           		REVIEW_NO,
           		TITLE,
           		MEMBER_ID,
           		REGDATE
           	FROM 
           		REVIEW
           	WHERE
           		MEMBER_ID = #{MEMBER_ID}	
        ]]>
	</select>
	
	<!-- mypage-mycoupon -->
	<select id="myCoupon" parameterType="hashmap"
		resultType="hashmap">
        <![CDATA[
           SELECT
           		COUPON_NO,
           		CONTENT,
           		VALIDITY,
           		STATE
           	FROM 
           		COUPON
           	WHERE
           		MEMBER_ID = #{MEMBER_ID}	
        ]]>
	</select>
	<!-- 쿠폰확인 -->
	<update id="couponRead" parameterType="hashmap">
		UPDATE
			COUPON
		SET
			STATE = STATE +1
		WHERE
			STATE = 0 AND
			COUPON_NO = #{COUPON_NO}
	</update>
	
	<!-- mypage-mymessage -->
	<select id="myMessage" parameterType="hashmap"
		resultType="hashmap">
        <![CDATA[
           SELECT
           		MESSAGE_NO,
           		CONTENT,
           		SENDMEMBER,
           		REGDATE,
           		STATE
           	FROM 
           		MESSAGE
           	WHERE
           		TOMEMBER = #{TOMEMBER}	
        ]]>
	</select>
	
		<!-- 메세지확인 -->
	<update id="messageRead" parameterType="hashmap">
		UPDATE
			MESSAGE
		SET
			STATE = STATE +1
		WHERE
			STATE = 0 AND
			MESSAGE_NO = #{MESSAGE_NO}
	</update>
	
		<!--마이페이지에서 뜨는 메세지의수-->
	<select id="noReadMessage" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(TOMEMBER) as NOREADMESSAGE
		FROM
			MESSAGE
		WHERE
			TOMEMBER = #{TOMEMBER} AND
			STATE = 0
			
	</select>
	
	<!-- mypage state값들 -->
	<select id="state" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
           SELECT
           		COUNT(STATE) as CNT
           	FROM 
           		ORDER_3T
           	WHERE
           		MEMBER_ID = #{MEMBER_ID} AND
           		STATE =  #{STATE}
           		]]>					
       
	</select>
	
	<!-- mypage 주문수(입금확인중,배송준비붕,배송중,배송완료) -->
	<select id="order" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as ORDER2 
		FROM
			ORDER_3T
		WHERE
			MEMBER_ID = #{MEMBER_ID} AND 
			STATE between 0 and 3
	</select>
	<!-- mypage 교환수 -->
	<select id="swap" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as SWAP
		FROM
			ORDER_3T
		WHERE
			MEMBER_ID = #{MEMBER_ID} AND 
			STATE between 4 and 7
	</select>
	<!-- mypage 환불수 -->
	<select id="refund" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as REFUND
		FROM
			ORDER_3T
		WHERE
			MEMBER_ID = #{MEMBER_ID} AND 
			STATE between 8 and 9
	</select>
	
	<!-- mypage 총주문수 -->
	<select id="orderAll" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as ORDERALL
		FROM
			ORDER_3T
		WHERE
			MEMBER_ID = #{MEMBER_ID} 
			<!-- AND 
			STATE between 0 and 8 -->
	</select>
	
	<!-- mypage 메세지수 -->
	<select id="messageAll" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(TOMEMBER) as MESSAGEALL
		FROM
			MESSAGE
		WHERE
			TOMEMBER = #{TOMEMBER}
	</select>
	<!-- mypage 쿠폰수 -->
	<select id="couponAll" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as COUPONALL
		FROM
			COUPON
		WHERE
			MEMBER_ID = #{MEMBER_ID}
	</select>

	<!--로그인시 뜨는 확인하지 않은 쿠폰수-->
	<select id="noReadCoupon" parameterType="hashmap" resultType="hashmap">
		SELECT
			COUNT(MEMBER_ID) as NOREADCOUPON
		FROM
			COUPON
		WHERE
			MEMBER_ID = #{MEMBER_ID} AND
			STATE = 0
			
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="hashmap" useGeneratedKeys="true" keyProperty="MEMBER_NO">
		<selectKey keyProperty="MEMBER_NO" resultType="java.lang.Integer" order="BEFORE">
			SELECT MEMBER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		<![CDATA[
		INSERT INTO MEMBER
			(MEMBER_NO,
			MEMBER_ID,
		  	PASSWD,
		 	NAME, 
		 	BIRTH, 
		 	ZIPCODE, 
		 	ADDR1, 
		 	ADDR2, 
		 	PHONE, 
		 	EMAIL, 
		 	REGDATE)
		VALUES
			(#{MEMBER_NO}, 
			#{MEMBER_ID}, 
			#{PASSWD}, 
			#{NAME}, 
			#{BIRTH}, 
			#{ZIPCODE}, 
			#{ADDR1}, 
			#{ADDR2}, 
			#{PHONE}, 
			#{EMAIL}, 
			SYSDATE)
		]]>
		
		
	</insert>
	
	<!-- 회원가입2 -->
	<insert id="insertMember2" parameterType="hashmap" useGeneratedKeys="true" keyProperty="MEMBER_NO">
		<selectKey keyProperty="MEMBER_NO" resultType="java.lang.Integer" order="BEFORE">
			SELECT MEMBER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		<![CDATA[
		INSERT INTO MEMBER
			(MEMBER_NO,
			MEMBER_ID,
		  	PASSWD,
		 	NAME, 
		 	BIRTH, 
		 	ZIPCODE, 
		 	ADDR1, 
		 	ADDR2, 
		 	PHONE, 
		 	EMAIL, 
		 	REGDATE)
		VALUES
			(#{MEMBER_NO}, 
			#{MEMBER_ID}, 
			#{PASSWD3}, 
			#{NAME}, 
			#{BIRTH}, 
			#{ZIPCODE}, 
			#{ADDR1}, 
			#{ADDR2}, 
			#{PHONE}, 
			#{EMAIL}, 
			SYSDATE)
		]]>
		
		
	</insert>
	
	<!-- 메세지보내기 -->
	<insert id="insertMessage" parameterType="hashmap" useGeneratedKeys="true" keyProperty="MESSAGE_NO">
		<selectKey keyProperty="MESSAGE_NO"	resultType="java.lang.Integer" order="BEFORE">
			SELECT M_MSG_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
    		<![CDATA[
			INSERT INTO	MESSAGE 
				(MESSAGE_NO,
				CONTENT,
				TOMEMBER,
				SENDMEMBER,
				REGDATE
				)
			VALUES
				(
				#{MESSAGE_NO},
				#{CONTENT},
				#{TOMEMBER},
				#{SENDMEMBER},
				SYSDATE
				)
		]]>
	</insert>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="hashmap">
      	<![CDATA[
         DELETE
         FROM MEMBER 
         WHERE MEMBER_ID = #{MEMBER_ID}
      	]]>
	</delete>
	
		<!-- 메세지 삭제 -->
	<delete id="deleteMessage" parameterType="hashmap">
      	<![CDATA[
         DELETE FROM 
         	MESSAGE 
         WHERE 
         	MESSAGE_NO = #{MESSAGE_NO}
      	]]>
	</delete>
	
	<!-- 쿠폰 삭제 -->
	<delete id="deleteCoupon">
      	<![CDATA[
         DELETE FROM 
         	COUPON 
         WHERE 
         	VALIDITY < sysdate
      	]]>
	</delete>
	


	
 	<select id="checkId" parameterType="String" resultType="int">
	<![CDATA[
		SELECT 
			COUNT(*) 
		FROM 
			MEMBER
		WHERE 
			MEMBER_ID = #{MEMBER_ID}
	]]>
	</select>
	
	<!-- 정보수정 -->
	<update id="updateMember" parameterType="hashmap">
		<![CDATA[
		UPDATE 
			MEMBER 
		SET 
			PASSWD = #{PASSWD}, ZIPCODE = #{ZIPCODE}, ADDR1 = #{ADDR1}, ADDR2 = #{ADDR2}, PHONE = #{PHONE}, EMAIL = #{EMAIL}
		WHERE 
			MEMBER_ID = #{MEMBER_ID}
		]]>

	
	</update>
	
<select id="AdminSearchmyMessage" parameterType="hashmap"
		resultType="hashmap">
        
           SELECT
           		MESSAGE_NO,
           		CONTENT,
           		SENDMEMBER,
           		REGDATE,
           		STATE
           	FROM 
           		MESSAGE
           	WHERE
           		<if test='SearchNum.equals("SENDMEMBER")'> 
			
			(SENDMEMBER LIKE '%' || #{SearchKeyword} || '%')
			
			</if>
			
			 <if test='SearchNum.equals("CONTENT")'> 
			  
			(CONTENT LIKE '%' || #{SearchKeyword} || '%')
			
			</if> 	
        
	</select>

	
	
</mapper>